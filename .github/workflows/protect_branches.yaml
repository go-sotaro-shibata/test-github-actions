name: Protect Hotfix and Release Branches

on:
  push:
    branches:
      - 'hotfix/**'
      - 'release/**'

jobs:
  protect-branch:
    runs-on: ubuntu-latest

    permissions: write-all

    steps:
      # - uses: actions/checkout@v4
      # - name: Protect branch from deletion
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.EDIT_BRANCH_RULES_SECRET }}
      #   run: |
      #     BRANCH_NAME=${GITHUB_REF#refs/heads/}
      #     OWNER=${{ github.repository_owner }}
      #     REPO=${{ github.event.repository.name }}
      #     echo "Protecting branch: $BRANCH_NAME, owner: $OWNER, repo: $REPO"

      #     gh api \
      #       --method PUT \
      #       -H "Accept: application/vnd.github+json" \
      #       -H "X-GitHub-Api-Version: 2022-11-28" \
      #       /repos/${OWNER}/${REPO}/branches/${BRANCH_NAME}/protection \
      #       -F "required_status_checks.strict=true" \
      #       -f "required_status_checks.contexts[]=continuous-integration/travis-ci" \
      #       -F "enforce_admins=true" \
      #       -F "required_pull_request_reviews[dismiss_stale_reviews]=false" \
      #       -F "required_pull_request_reviews[require_code_owner_reviews]=false" \
      #       -F "required_pull_request_reviews[required_approving_review_count]=1" \
      #       -f "restrictions.users=[]" \
      #       -f "restrictions.teams=[]" \
      #       -f "restrictions.apps=[]"
      #       # -f "allow_deletions=false"

      # - name: toronto-cli install & start
      #   uses: MobilityTechnologiesActions/internal-tools/toronto-cli@v0
      #   with:
      #     mot-toronto-token: ${{ secrets.MOT_TORONTO_TOKEN }}

      - name: Create branch protection
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.BRANCH_PROTECTION_SECRETS }}
          script: |
            const branch = context.payload.ref;

            github.rest.repos.updateBranchProtection({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: branch,
              required_status_checks: {
                strict: false,
                contexts: []
              },
              enforce_admins: true,
              required_pull_request_reviews: {
                "required_approving_review_count": 1
              },
              restrictions: null,
              allow_deletions: false
            })
